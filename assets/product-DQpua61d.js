import o from"./api-1h7xoGYc.js";const r={getAll:async e=>{const t=new URLSearchParams;e?.type&&t.append("type",e.type),e?.color&&t.append("color",e.color),e?.page!==void 0&&t.append("page",e.page.toString()),e?.size!==void 0&&t.append("size",e.size.toString());const s=t.toString()?`/products?${t.toString()}`:"/products",n=await o.get(s);return console.log("getAll - Response data:",n.data),n.data?.content&&n.data.content.length>0&&console.log("getAll - First product kit:",n.data.content[0]?.kit),n.data},getAllNonPaginated:async e=>{const t=new URLSearchParams;e?.type&&t.append("type",e.type),e?.color&&t.append("color",e.color);const s=t.toString()?`/products?${t.toString()}`:"/products";return(await o.get(s)).data},getByKey:async e=>{const t=await o.get(`/products/${e}`);return console.log("getByKey - Response data:",t.data),console.log("getByKey - Kit value:",t.data?.kit),t.data},create:async e=>(await o.post("/products",e)).data,update:async(e,t)=>(console.log("ProductService.update - Key:",e),console.log("ProductService.update - Product payload:",JSON.stringify(t,null,2)),console.log("ProductService.update - Kit value:",t.kit),(await o.put(`/products/${e}`,t)).data),delete:async e=>(await o.delete(`/products/${e}`)).data,search:async e=>(await o.get("/products/search",{params:e})).data};export{r as p};
